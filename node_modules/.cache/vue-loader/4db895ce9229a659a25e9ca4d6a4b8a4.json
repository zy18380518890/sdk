{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\vue-element-admin-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\vue-element-admin-master\\src\\components\\page\\Tabs.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\vue-element-admin-master\\src\\components\\page\\Tabs.vue","mtime":1557223914000},{"path":"C:\\Users\\Administrator\\Desktop\\vue-element-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\vue-element-admin-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\vue-element-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\vue-element-admin-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    name: 'tabs',\n    data() {\n        return {\n            message: 'first',\n            showHeader: false,\n            unread: [{\n                date: '2018-04-19 20:00:00',\n                title: '【系统通知】该系统将于今晚凌晨2点到5点进行升级维护',\n            },{\n                date: '2018-04-19 21:00:00',\n                title: '今晚12点整发大红包，先到先得',\n            }],\n            read: [{\n                date: '2018-04-19 20:00:00',\n                title: '【系统通知】该系统将于今晚凌晨2点到5点进行升级维护'\n            }],\n            recycle: [{\n                date: '2018-04-19 20:00:00',\n                title: '【系统通知】该系统将于今晚凌晨2点到5点进行升级维护'\n            }]\n        }\n    },\n    methods: {\n        handleRead(index) {\n            const item = this.unread.splice(index, 1);\n            console.log(item);\n            this.read = item.concat(this.read);\n        },\n        handleDel(index) {\n            const item = this.read.splice(index, 1);\n            this.recycle = item.concat(this.recycle);\n        },\n        handleRestore(index) {\n            const item = this.recycle.splice(index, 1);\n            this.read = item.concat(this.read);\n        }\n    },\n    computed: {\n        unreadNum(){\n            return this.unread.length;\n        }\n    }\n}\n\n",{"version":3,"sources":["Tabs.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Tabs.vue","sourceRoot":"src\\components\\page","sourcesContent":["<template>\n    <div class=\"\">\n        <div class=\"crumbs\">\n            <el-breadcrumb separator=\"/\">\n                <el-breadcrumb-item><i class=\"el-icon-lx-copy\"></i> tab选项卡</el-breadcrumb-item>\n            </el-breadcrumb>\n        </div>\n        <div class=\"container\">\n            <el-tabs v-model=\"message\">\n                <el-tab-pane :label=\"`未读消息(${unread.length})`\" name=\"first\">\n                    <el-table :data=\"unread\" :show-header=\"false\" style=\"width: 100%\">\n                        <el-table-column>\n                            <template slot-scope=\"scope\">\n                                <span class=\"message-title\">{{scope.row.title}}</span>\n                            </template>\n                        </el-table-column>\n                        <el-table-column prop=\"date\" width=\"180\"></el-table-column>\n                        <el-table-column width=\"120\">\n                            <template slot-scope=\"scope\">\n                                <el-button size=\"small\" @click=\"handleRead(scope.$index)\">标为已读</el-button>\n                            </template>\n                        </el-table-column>\n                    </el-table>\n                    <div class=\"handle-row\">\n                        <el-button type=\"primary\">全部标为已读</el-button>\n                    </div>\n                </el-tab-pane>\n                <el-tab-pane :label=\"`已读消息(${read.length})`\" name=\"second\">\n                    <template v-if=\"message === 'second'\">\n                        <el-table :data=\"read\" :show-header=\"false\" style=\"width: 100%\">\n                            <el-table-column>\n                                <template slot-scope=\"scope\">\n                                    <span class=\"message-title\">{{scope.row.title}}</span>\n                                </template>\n                            </el-table-column>\n                            <el-table-column prop=\"date\" width=\"150\"></el-table-column>\n                            <el-table-column width=\"120\">\n                                <template slot-scope=\"scope\">\n                                    <el-button type=\"danger\" @click=\"handleDel(scope.$index)\">删除</el-button>\n                                </template>\n                            </el-table-column>\n                        </el-table>\n                        <div class=\"handle-row\">\n                            <el-button type=\"danger\">删除全部</el-button>\n                        </div>\n                    </template>\n                </el-tab-pane>\n                <el-tab-pane :label=\"`回收站(${recycle.length})`\" name=\"third\">\n                    <template v-if=\"message === 'third'\">\n                        <el-table :data=\"recycle\" :show-header=\"false\" style=\"width: 100%\">\n                            <el-table-column>\n                                <template slot-scope=\"scope\">\n                                    <span class=\"message-title\">{{scope.row.title}}</span>\n                                </template>\n                            </el-table-column>\n                            <el-table-column prop=\"date\" width=\"150\"></el-table-column>\n                            <el-table-column width=\"120\">\n                                <template slot-scope=\"scope\">\n                                    <el-button @click=\"handleRestore(scope.$index)\">还原</el-button>\n                                </template>\n                            </el-table-column>\n                        </el-table>\n                        <div class=\"handle-row\">\n                            <el-button type=\"danger\">清空回收站</el-button>\n                        </div>\n                    </template>\n                </el-tab-pane>\n            </el-tabs>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        name: 'tabs',\n        data() {\n            return {\n                message: 'first',\n                showHeader: false,\n                unread: [{\n                    date: '2018-04-19 20:00:00',\n                    title: '【系统通知】该系统将于今晚凌晨2点到5点进行升级维护',\n                },{\n                    date: '2018-04-19 21:00:00',\n                    title: '今晚12点整发大红包，先到先得',\n                }],\n                read: [{\n                    date: '2018-04-19 20:00:00',\n                    title: '【系统通知】该系统将于今晚凌晨2点到5点进行升级维护'\n                }],\n                recycle: [{\n                    date: '2018-04-19 20:00:00',\n                    title: '【系统通知】该系统将于今晚凌晨2点到5点进行升级维护'\n                }]\n            }\n        },\n        methods: {\n            handleRead(index) {\n                const item = this.unread.splice(index, 1);\n                console.log(item);\n                this.read = item.concat(this.read);\n            },\n            handleDel(index) {\n                const item = this.read.splice(index, 1);\n                this.recycle = item.concat(this.recycle);\n            },\n            handleRestore(index) {\n                const item = this.recycle.splice(index, 1);\n                this.read = item.concat(this.read);\n            }\n        },\n        computed: {\n            unreadNum(){\n                return this.unread.length;\n            }\n        }\n    }\n\n</script>\n\n<style>\n.message-title{\n    cursor: pointer;\n}\n.handle-row{\n    margin-top: 30px;\n}\n</style>\n\n"]}]}