{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\vue-element-admin-master\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Desktop\\vue-element-admin-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Administrator\\Desktop\\vue-element-admin-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\vue-element-admin-master\\src\\components\\page\\tree3.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\vue-element-admin-master\\src\\components\\page\\tree3.vue","mtime":1557223914000},{"path":"C:\\Users\\Administrator\\Desktop\\vue-element-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\vue-element-admin-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\vue-element-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\vue-element-admin-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.array.find-index\";\nimport _JSON$stringify from \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\vue-element-admin-master\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/json/stringify\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar id = 1000;\nexport default {\n  data: function data() {\n    var data = [{\n      id: 1,\n      label: \"一级 1\",\n      children: [{\n        id: 4,\n        label: \"二级 1-1\",\n        children: [{\n          id: 9,\n          label: \"三级 1-1-1\"\n        }, {\n          id: 10,\n          label: \"三级 1-1-2\"\n        }]\n      }]\n    }, {\n      id: 2,\n      label: \"一级 2\",\n      children: [{\n        id: 5,\n        label: \"二级 2-1\"\n      }, {\n        id: 6,\n        label: \"二级 2-2\"\n      }]\n    }, {\n      id: 3,\n      label: \"一级 3\",\n      children: [{\n        id: 7,\n        label: \"二级 3-1\"\n      }, {\n        id: 8,\n        label: \"二级 3-2\"\n      }]\n    }];\n    return {\n      data4: JSON.parse(_JSON$stringify(data)),\n      data5: JSON.parse(_JSON$stringify(data)),\n      data6: [{\n        id: 1,\n        label: '一级 1',\n        children: [{\n          id: 4,\n          label: '二级 1-1',\n          children: [{\n            id: 9,\n            label: '三级 1-1-1'\n          }, {\n            id: 10,\n            label: '三级 1-1-2'\n          }]\n        }]\n      }, {\n        id: 2,\n        label: '一级 2',\n        children: [{\n          id: 5,\n          label: '二级 2-1'\n        }, {\n          id: 6,\n          label: '二级 2-2'\n        }]\n      }, {\n        id: 3,\n        label: '一级 3',\n        children: [{\n          id: 7,\n          label: '二级 3-1'\n        }, {\n          id: 8,\n          label: '二级 3-2',\n          children: [{\n            id: 11,\n            label: '三级 3-2-1'\n          }, {\n            id: 12,\n            label: '三级 3-2-2'\n          }, {\n            id: 13,\n            label: '三级 3-2-3'\n          }]\n        }]\n      }]\n    };\n  },\n  methods: {\n    append: function append(data) {\n      var newChild = {\n        id: id++,\n        label: \"testtest\",\n        children: []\n      };\n\n      if (!data.children) {\n        this.$set(data, \"children\", []);\n      }\n\n      data.children.push(newChild);\n    },\n    remove: function remove(node, data) {\n      var parent = node.parent;\n      var children = parent.data.children || parent.data;\n      var index = children.findIndex(function (d) {\n        return d.id === data.id;\n      });\n      children.splice(index, 1);\n    },\n    renderContent: function renderContent(h, _ref) {\n      var _this = this;\n\n      var node = _ref.node,\n          data = _ref.data,\n          store = _ref.store;\n      return h(\"span\", {\n        \"class\": \"custom-tree-node\"\n      }, [h(\"span\", [node.label]), h(\"span\", [h(\"el-button\", {\n        attrs: {\n          size: \"mini\",\n          type: \"text\"\n        },\n        on: {\n          \"click\": function click() {\n            return _this.append(data);\n          }\n        }\n      }, [\"Append\"]), h(\"el-button\", {\n        attrs: {\n          size: \"mini\",\n          type: \"text\"\n        },\n        on: {\n          \"click\": function click() {\n            return _this.remove(node, data);\n          }\n        }\n      }, [\"Delete\"])])]);\n    },\n    handleDragStart: function handleDragStart(node, ev) {\n      console.log('drag start', node);\n    },\n    handleDragEnter: function handleDragEnter(draggingNode, dropNode, ev) {\n      console.log('tree drag enter: ', dropNode.label);\n    },\n    handleDragLeave: function handleDragLeave(draggingNode, dropNode, ev) {\n      console.log('tree drag leave: ', dropNode.label);\n    },\n    handleDragOver: function handleDragOver(draggingNode, dropNode, ev) {\n      console.log('tree drag over: ', dropNode.label);\n    },\n    handleDragEnd: function handleDragEnd(draggingNode, dropNode, dropType, ev) {\n      console.log('tree drag end: ', dropNode && dropNode.label, dropType);\n    },\n    handleDrop: function handleDrop(draggingNode, dropNode, dropType, ev) {\n      console.log('tree drop: ', dropNode.label, dropType);\n    },\n    allowDrop: function allowDrop(draggingNode, dropNode, type) {\n      if (dropNode.data.label === '二级 3-1') {\n        return type !== 'inner';\n      } else {\n        return true;\n      }\n    },\n    allowDrag: function allowDrag(draggingNode) {\n      return draggingNode.data.label.indexOf('三级 3-2-2') === -1;\n    }\n  }\n};",{"version":3,"sources":["tree3.vue"],"names":[],"mappings":"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","sourcesContent":["\n<template>\n  <div>\n    <div class=\"custom-tree-container\">\n      <el-row :gutter=\"10\">\n        <el-col :span=\"12\">\n          <div class=\"block\">\n            <p>使用 render-content</p>\n            <el-tree\n              :data=\"data4\"\n              show-checkbox\n              node-key=\"id\"\n              default-expand-all\n              :expand-on-click-node=\"false\"\n              :render-content=\"renderContent\"\n            ></el-tree>\n          </div>\n        </el-col>\n        <el-col :span=\"12\">\n          <div :span=\"12\" class=\"block\">\n            <p>使用 scoped slot</p>\n            <el-tree\n              :data=\"data5\"\n              show-checkbox\n              node-key=\"id\"\n              default-expand-all\n              :expand-on-click-node=\"false\"\n            >\n              <span class=\"custom-tree-node\" slot-scope=\"{ node, data }\">\n                <span>{{ node.label }}</span>\n                <span>\n                  <el-button type=\"text\" size=\"mini\" @click=\"() => append(data)\">Append</el-button>\n                  <el-button type=\"text\" size=\"mini\" @click=\"() => remove(node, data)\">Delete</el-button>\n                </span>\n              </span>\n            </el-tree>\n          </div>\n        </el-col>\n      </el-row>\n      <el-row>\n          <h4 style=\"padding:10px\">可拖拽节点</h4>\n        <el-tree\n          :data=\"data6\"\n          node-key=\"id\"\n          default-expand-all\n          @node-drag-start=\"handleDragStart\"\n          @node-drag-enter=\"handleDragEnter\"\n          @node-drag-leave=\"handleDragLeave\"\n          @node-drag-over=\"handleDragOver\"\n          @node-drag-end=\"handleDragEnd\"\n          @node-drop=\"handleDrop\"\n          draggable\n          :allow-drop=\"allowDrop\"\n          :allow-drag=\"allowDrag\"\n        ></el-tree>\n      </el-row>\n    </div>\n  </div>\n</template>\n<script>\nlet id = 1000;\n\nexport default {\n  data() {\n    const data = [\n      {\n        id: 1,\n        label: \"一级 1\",\n        children: [\n          {\n            id: 4,\n            label: \"二级 1-1\",\n            children: [\n              {\n                id: 9,\n                label: \"三级 1-1-1\"\n              },\n              {\n                id: 10,\n                label: \"三级 1-1-2\"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        id: 2,\n        label: \"一级 2\",\n        children: [\n          {\n            id: 5,\n            label: \"二级 2-1\"\n          },\n          {\n            id: 6,\n            label: \"二级 2-2\"\n          }\n        ]\n      },\n      {\n        id: 3,\n        label: \"一级 3\",\n        children: [\n          {\n            id: 7,\n            label: \"二级 3-1\"\n          },\n          {\n            id: 8,\n            label: \"二级 3-2\"\n          }\n        ]\n      }\n    ];\n    return {\n      data4: JSON.parse(JSON.stringify(data)),\n      data5: JSON.parse(JSON.stringify(data)),\n      data6: [{\n          id: 1,\n          label: '一级 1',\n          children: [{\n            id: 4,\n            label: '二级 1-1',\n            children: [{\n              id: 9,\n              label: '三级 1-1-1'\n            }, {\n              id: 10,\n              label: '三级 1-1-2'\n            }]\n          }]\n        }, {\n          id: 2,\n          label: '一级 2',\n          children: [{\n            id: 5,\n            label: '二级 2-1'\n          }, {\n            id: 6,\n            label: '二级 2-2'\n          }]\n        }, {\n          id: 3,\n          label: '一级 3',\n          children: [{\n            id: 7,\n            label: '二级 3-1'\n          }, {\n            id: 8,\n            label: '二级 3-2',\n            children: [{\n             id: 11,\n              label: '三级 3-2-1'\n            }, {\n              id: 12,\n              label: '三级 3-2-2'\n            }, {\n              id: 13,\n              label: '三级 3-2-3'\n            }]\n          }]\n        }]\n    };\n  },\n\n  methods: {\n    append(data) {\n      const newChild = { id: id++, label: \"testtest\", children: [] };\n      if (!data.children) {\n        this.$set(data, \"children\", []);\n      }\n      data.children.push(newChild);\n    },\n\n    remove(node, data) {\n      const parent = node.parent;\n      const children = parent.data.children || parent.data;\n      const index = children.findIndex(d => d.id === data.id);\n      children.splice(index, 1);\n    },\n\n    renderContent(h, { node, data, store }) {\n      return (\n        <span class=\"custom-tree-node\">\n          <span>{node.label}</span>\n          <span>\n            <el-button\n              size=\"mini\"\n              type=\"text\"\n              on-click={() => this.append(data)}\n            >\n              Append\n            </el-button>\n            <el-button\n              size=\"mini\"\n              type=\"text\"\n              on-click={() => this.remove(node, data)}\n            >\n              Delete\n            </el-button>\n          </span>\n        </span>\n      );\n    },\n    handleDragStart(node, ev) {\n        console.log('drag start', node);\n      },\n      handleDragEnter(draggingNode, dropNode, ev) {\n        console.log('tree drag enter: ', dropNode.label);\n      },\n      handleDragLeave(draggingNode, dropNode, ev) {\n        console.log('tree drag leave: ', dropNode.label);\n      },\n      handleDragOver(draggingNode, dropNode, ev) {\n        console.log('tree drag over: ', dropNode.label);\n      },\n      handleDragEnd(draggingNode, dropNode, dropType, ev) {\n        console.log('tree drag end: ', dropNode && dropNode.label, dropType);\n      },\n      handleDrop(draggingNode, dropNode, dropType, ev) {\n        console.log('tree drop: ', dropNode.label, dropType);\n      },\n      allowDrop(draggingNode, dropNode, type) {\n        if (dropNode.data.label === '二级 3-1') {\n          return type !== 'inner';\n        } else {\n          return true;\n        }\n      },\n      allowDrag(draggingNode) {\n        return draggingNode.data.label.indexOf('三级 3-2-2') === -1;\n      }\n    \n  }\n};\n</script>\n\n<style>\n.custom-tree-node {\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 14px;\n  padding-right: 8px;\n}\n</style>"],"sourceRoot":"src\\components\\page"}]}