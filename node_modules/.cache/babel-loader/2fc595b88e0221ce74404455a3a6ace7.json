{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\vue-element-admin-master\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Desktop\\vue-element-admin-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Administrator\\Desktop\\vue-element-admin-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\vue-element-admin-master\\src\\components\\Table\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\vue-element-admin-master\\src\\components\\Table\\index.vue","mtime":1614066086814},{"path":"C:\\Users\\Administrator\\Desktop\\vue-element-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\vue-element-admin-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\vue-element-admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\vue-element-admin-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import { mapGetters } from \"vuex\";\nexport default {\n  props: {\n    list: {\n      type: Array,\n      default: []\n    },\n    // 数据列表\n    columns: {\n      type: Array,\n      default: []\n    },\n    // 需要展示的列 === prop：列数据对应的属性，label：列名，align：对齐方式，width：列宽\n    operates: {},\n    // 操作按钮组 === label: 文本，type :类型（primary / success / warning / danger / info / text），show：是否显示，icon：按钮图标，plain：是否朴素按钮，disabled：是否禁用，method：回调方法\n    options: {\n      type: Object,\n      default: {\n        stripe: false,\n        // 是否为斑马纹 table\n        highlightCurrentRow: false // 是否要高亮当前行\n\n      }\n    } // table 表格的控制参数\n\n  },\n  //组件\n  components: {\n    expandDom: {\n      functional: true,\n      props: {\n        row: Object,\n        render: Function,\n        index: Number,\n        column: {\n          type: Object,\n          default: null\n        }\n      },\n      render: function render(h, ctx) {\n        var params = {\n          row: ctx.props.row,\n          index: ctx.props.index\n        };\n        if (ctx.props.column) params.column = ctx.props.column;\n        return ctx.props.render(h, params);\n      }\n    }\n  },\n  // 数据\n  data: function data() {\n    return {\n      pageIndex: 1,\n      multipleSelection: [] // 多行选中\n\n    };\n  },\n  mounted: function mounted() {},\n  computed: {},\n  methods: {\n    // 多行选中\n    handleSelectionChange: function handleSelectionChange(val) {\n      this.multipleSelection = val;\n      this.$emit(\"handleSelectionChange\", val);\n    },\n    // 显示 表格操作弹窗\n    showActionTableDialog: function showActionTableDialog() {\n      this.$emit(\"handelAction\");\n    }\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmFA;AACA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAIA;AACA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAFA,KALA;AAQA;AACA,IAAA,QAAA,EAAA,EATA;AASA;AACA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AACA,QAAA,MAAA,EAAA,KADA;AACA;AACA,QAAA,mBAAA,EAAA,KAFA,CAEA;;AAFA;AAFA,KAVA,CAgBA;;AAhBA,GADA;AAmBA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA;AACA,MAAA,UAAA,EAAA,IADA;AAEA,MAAA,KAAA,EAAA;AACA,QAAA,GAAA,EAAA,MADA;AAEA,QAAA,MAAA,EAAA,QAFA;AAGA,QAAA,KAAA,EAAA,MAHA;AAIA,QAAA,MAAA,EAAA;AACA,UAAA,IAAA,EAAA,MADA;AAEA,UAAA,OAAA,EAAA;AAFA;AAJA,OAFA;AAWA,MAAA,MAAA,EAAA,gBAAA,CAAA,EAAA,GAAA,EAAA;AACA,YAAA,MAAA,GAAA;AACA,UAAA,GAAA,EAAA,GAAA,CAAA,KAAA,CAAA,GADA;AAEA,UAAA,KAAA,EAAA,GAAA,CAAA,KAAA,CAAA;AAFA,SAAA;AAIA,YAAA,GAAA,CAAA,KAAA,CAAA,MAAA,EAAA,MAAA,CAAA,MAAA,GAAA,GAAA,CAAA,KAAA,CAAA,MAAA;AACA,eAAA,GAAA,CAAA,KAAA,CAAA,MAAA,CAAA,CAAA,EAAA,MAAA,CAAA;AACA;AAlBA;AADA,GApBA;AA0CA;AACA,EAAA,IA3CA,kBA2CA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,CADA;AAEA,MAAA,iBAAA,EAAA,EAFA,CAEA;;AAFA,KAAA;AAIA,GAhDA;AAiDA,EAAA,OAjDA,qBAiDA,CAAA,CAjDA;AAkDA,EAAA,QAAA,EAAA,EAlDA;AAmDA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,qBAFA,iCAEA,GAFA,EAEA;AACA,WAAA,iBAAA,GAAA,GAAA;AACA,WAAA,KAAA,CAAA,uBAAA,EAAA,GAAA;AACA,KALA;AAMA;AACA,IAAA,qBAPA,mCAOA;AACA,WAAA,KAAA,CAAA,cAAA;AACA;AATA;AAnDA,CAAA","sourcesContent":["<template>\r\n  <div class=\"table\">\r\n    <el-table\r\n      id=\"iTable\"\r\n      v-loading.iTable=\"options.loading\"\r\n      :data=\"list\"\r\n      :stripe=\"options.stripe\"\r\n      ref=\"mutipleTable\"\r\n      @selection-change=\"handleSelectionChange\"\r\n      :header-cell-style=\"{background:'#eee',color:'#606266'}\"\r\n    >\r\n      <!--选择框-->\r\n      <el-table-column\r\n        v-if=\"options.mutiSelect\"\r\n        type=\"selection\"\r\n        style=\"width: 55px\"\r\n      >\r\n      </el-table-column>\r\n      <!--end-->\r\n      <!--数据列-->\r\n      <template v-for=\"(column, index) in columns\">\r\n        <el-table-column\r\n          :prop=\"column.prop\"\r\n          :key=\"column.label\"\r\n          :label=\"column.label\"\r\n          :align=\"column.align\"\r\n          :width=\"column.width\"\r\n        >\r\n          <!-- <template slot-scope=\"scope\">\r\n            <template v-if=\"!column.render\">\r\n              <template v-if=\"column.formatter\">\r\n                <span v-html=\"column.formatter(scope.row, column)\"></span>\r\n              </template>\r\n              <template v-else>\r\n                <span>{{ scope.row[column.prop] }}</span>\r\n              </template>\r\n            </template>\r\n            <template v-else>\r\n              <expand-dom\r\n                :column=\"column\"\r\n                :row=\"scope.row\"\r\n                :render=\"column.render\"\r\n                :index=\"index\"\r\n              >\r\n              </expand-dom>\r\n            </template>\r\n          </template> -->\r\n        </el-table-column>\r\n      </template>\r\n      <!--end-->\r\n      <!--按钮操作组-->\r\n      <el-table-column\r\n        ref=\"fixedColumn\"\r\n        label=\"操作\"\r\n        align=\"center\"\r\n        :width=\"operates.width\"\r\n        :fixed=\"operates.fixed\"\r\n        v-if=\"operates.list.filter((_x) => _x.show === true).length > 0\"\r\n      >\r\n        <template slot-scope=\"scope\">\r\n          <div class=\"operate-group\">\r\n            <template v-for=\"(btn, key) in operates.list\">\r\n              <div class=\"item\" v-if=\"btn.show\" :key=\"btn.id\">\r\n                <span\r\n                  :style=\"btn.style\"\r\n                  size=\"mini\"\r\n                  :class=\"btn.class\"\r\n                  :plain=\"btn.plain\"\r\n                  @click=\"btn.method(key, scope.row)\"\r\n                  >{{ btn.label }}\r\n                </span>\r\n              \r\n              </divr\n            </template>\r\n          </div>\r\n        </template>\r\n      </el-table-column>\r\n      <!--end-->\r\n    </el-table>\r\n  </div>\r\n</template>\r\n<!--end-->\r\n<script>\r\n// import { mapGetters } from \"vuex\";\r\nexport default {\r\n  props: {\r\n    list: {\r\n      type: Array,\r\n      default: [],\r\n    }, // 数据列表\r\n    columns: {\r\n      type: Array,\r\n      default: [],\r\n    }, // 需要展示的列 === prop：列数据对应的属性，label：列名，align：对齐方式，width：列宽\r\n    operates: {}, // 操作按钮组 === label: 文本，type :类型（primary / success / warning / danger / info / text），show：是否显示，icon：按钮图标，plain：是否朴素按钮，disabled：是否禁用，method：回调方法\r\n    options: {\r\n      type: Object,\r\n      default: {\r\n        stripe: false, // 是否为斑马纹 table\r\n        highlightCurrentRow: false, // 是否要高亮当前行\r\n      },\r\n    }, // table 表格的控制参数\r\n  },\r\n  //组件\r\n  components: {\r\n    expandDom: {\r\n      functional: true,\r\n      props: {\r\n        row: Object,\r\n        render: Function,\r\n        index: Number,\r\n        column: {\r\n          type: Object,\r\n          default: null,\r\n        },\r\n      },\r\n      render: (h, ctx) => {\r\n        const params = {\r\n          row: ctx.props.row,\r\n          index: ctx.props.index,\r\n        };\r\n        if (ctx.props.column) params.column = ctx.props.column;\r\n        return ctx.props.render(h, params);\r\n      },\r\n    },\r\n  },\r\n  // 数据\r\n  data() {\r\n    return {\r\n      pageIndex: 1,\r\n      multipleSelection: [], // 多行选中\r\n    };\r\n  },\r\n  mounted() {},\r\n  computed: {},\r\n  methods: {\r\n    // 多行选中\r\n    handleSelectionChange(val) {\r\n      this.multipleSelection = val;\r\n      this.$emit(\"handleSelectionChange\", val);\r\n    },\r\n    // 显示 表格操作弹窗\r\n    showActionTableDialog() {\r\n      this.$emit(\"handelAction\");\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style>\r\n.operate-group {\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-around;\r\n}\r\n</style>"],"sourceRoot":"src\\components\\Table"}]}